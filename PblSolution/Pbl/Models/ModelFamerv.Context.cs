//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Pbl.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class FamervEntities : DbContext
    {
        public FamervEntities()
            : base("name=FamervEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Aluno> Aluno { get; set; }
        public virtual DbSet<Ano> Ano { get; set; }
        public virtual DbSet<Aula> Aula { get; set; }
        public virtual DbSet<AvaliacaoTutoria> AvaliacaoTutoria { get; set; }
        public virtual DbSet<ControleNotas> ControleNotas { get; set; }
        public virtual DbSet<ControleNotasXAula> ControleNotasXAula { get; set; }
        public virtual DbSet<ControleNotasXProva> ControleNotasXProva { get; set; }
        public virtual DbSet<Disciplina> Disciplina { get; set; }
        public virtual DbSet<FichaAvaliacao> FichaAvaliacao { get; set; }
        public virtual DbSet<Grupo> Grupo { get; set; }
        public virtual DbSet<InscricaoTurma> InscricaoTurma { get; set; }
        public virtual DbSet<Med> Med { get; set; }
        public virtual DbSet<Modulo> Modulo { get; set; }
        public virtual DbSet<Pergunta> Pergunta { get; set; }
        public virtual DbSet<PerguntaXFicha> PerguntaXFicha { get; set; }
        public virtual DbSet<Problema> Problema { get; set; }
        public virtual DbSet<ProblemaXMed> ProblemaXMed { get; set; }
        public virtual DbSet<Professor> Professor { get; set; }
        public virtual DbSet<Prova> Prova { get; set; }
        public virtual DbSet<Semestre> Semestre { get; set; }
        public virtual DbSet<TipoDisciplina> TipoDisciplina { get; set; }
        public virtual DbSet<TipoProva> TipoProva { get; set; }
        public virtual DbSet<TipoUsuario> TipoUsuario { get; set; }
        public virtual DbSet<Turma> Turma { get; set; }
        public virtual DbSet<Usuario> Usuario { get; set; }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual int SpCrudAluno(Nullable<int> id, string nome, string cpf, string senha, string matricula, string statementType)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var nomeParameter = nome != null ?
                new ObjectParameter("nome", nome) :
                new ObjectParameter("nome", typeof(string));
    
            var cpfParameter = cpf != null ?
                new ObjectParameter("cpf", cpf) :
                new ObjectParameter("cpf", typeof(string));
    
            var senhaParameter = senha != null ?
                new ObjectParameter("senha", senha) :
                new ObjectParameter("senha", typeof(string));
    
            var matriculaParameter = matricula != null ?
                new ObjectParameter("matricula", matricula) :
                new ObjectParameter("matricula", typeof(string));
    
            var statementTypeParameter = statementType != null ?
                new ObjectParameter("StatementType", statementType) :
                new ObjectParameter("StatementType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SpCrudAluno", idParameter, nomeParameter, cpfParameter, senhaParameter, matriculaParameter, statementTypeParameter);
        }
    
        public virtual int SpCrudAno(Nullable<int> id, string ano, string statementType)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var anoParameter = ano != null ?
                new ObjectParameter("ano", ano) :
                new ObjectParameter("ano", typeof(string));
    
            var statementTypeParameter = statementType != null ?
                new ObjectParameter("StatementType", statementType) :
                new ObjectParameter("StatementType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SpCrudAno", idParameter, anoParameter, statementTypeParameter);
        }
    
        public virtual int SpCrudDisciplina(Nullable<int> id, Nullable<int> idTipoDisciplina, string descricao, string statementType)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var idTipoDisciplinaParameter = idTipoDisciplina.HasValue ?
                new ObjectParameter("idTipoDisciplina", idTipoDisciplina) :
                new ObjectParameter("idTipoDisciplina", typeof(int));
    
            var descricaoParameter = descricao != null ?
                new ObjectParameter("descricao", descricao) :
                new ObjectParameter("descricao", typeof(string));
    
            var statementTypeParameter = statementType != null ?
                new ObjectParameter("StatementType", statementType) :
                new ObjectParameter("StatementType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SpCrudDisciplina", idParameter, idTipoDisciplinaParameter, descricaoParameter, statementTypeParameter);
        }
    
        public virtual int SpCrudGrupo(Nullable<int> id, Nullable<int> idProfessor, string descricao, Nullable<int> idMed, string statementType)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var idProfessorParameter = idProfessor.HasValue ?
                new ObjectParameter("idProfessor", idProfessor) :
                new ObjectParameter("idProfessor", typeof(int));
    
            var descricaoParameter = descricao != null ?
                new ObjectParameter("descricao", descricao) :
                new ObjectParameter("descricao", typeof(string));
    
            var idMedParameter = idMed.HasValue ?
                new ObjectParameter("idMed", idMed) :
                new ObjectParameter("idMed", typeof(int));
    
            var statementTypeParameter = statementType != null ?
                new ObjectParameter("StatementType", statementType) :
                new ObjectParameter("StatementType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SpCrudGrupo", idParameter, idProfessorParameter, descricaoParameter, idMedParameter, statementTypeParameter);
        }
    
        public virtual int SpCrudInscricaoMed(Nullable<int> id, Nullable<int> idAluno, Nullable<int> idMed, string statementType)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var idAlunoParameter = idAluno.HasValue ?
                new ObjectParameter("idAluno", idAluno) :
                new ObjectParameter("idAluno", typeof(int));
    
            var idMedParameter = idMed.HasValue ?
                new ObjectParameter("idMed", idMed) :
                new ObjectParameter("idMed", typeof(int));
    
            var statementTypeParameter = statementType != null ?
                new ObjectParameter("StatementType", statementType) :
                new ObjectParameter("StatementType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SpCrudInscricaoMed", idParameter, idAlunoParameter, idMedParameter, statementTypeParameter);
        }
    
        public virtual int SpCrudMed(Nullable<int> id, string descricao, Nullable<int> idSemestre, string statementType)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var descricaoParameter = descricao != null ?
                new ObjectParameter("descricao", descricao) :
                new ObjectParameter("descricao", typeof(string));
    
            var idSemestreParameter = idSemestre.HasValue ?
                new ObjectParameter("idSemestre", idSemestre) :
                new ObjectParameter("idSemestre", typeof(int));
    
            var statementTypeParameter = statementType != null ?
                new ObjectParameter("StatementType", statementType) :
                new ObjectParameter("StatementType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SpCrudMed", idParameter, descricaoParameter, idSemestreParameter, statementTypeParameter);
        }
    
        public virtual int SpCrudModulo(Nullable<int> id, string descricao, Nullable<System.DateTime> dtInicio, Nullable<System.DateTime> dtFim, Nullable<int> idSemestre, string statementType)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var descricaoParameter = descricao != null ?
                new ObjectParameter("descricao", descricao) :
                new ObjectParameter("descricao", typeof(string));
    
            var dtInicioParameter = dtInicio.HasValue ?
                new ObjectParameter("dtInicio", dtInicio) :
                new ObjectParameter("dtInicio", typeof(System.DateTime));
    
            var dtFimParameter = dtFim.HasValue ?
                new ObjectParameter("dtFim", dtFim) :
                new ObjectParameter("dtFim", typeof(System.DateTime));
    
            var idSemestreParameter = idSemestre.HasValue ?
                new ObjectParameter("idSemestre", idSemestre) :
                new ObjectParameter("idSemestre", typeof(int));
    
            var statementTypeParameter = statementType != null ?
                new ObjectParameter("StatementType", statementType) :
                new ObjectParameter("StatementType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SpCrudModulo", idParameter, descricaoParameter, dtInicioParameter, dtFimParameter, idSemestreParameter, statementTypeParameter);
        }
    
        public virtual int SpCrudProblema(Nullable<int> id, string titulo, string descricao, string statementType)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var tituloParameter = titulo != null ?
                new ObjectParameter("titulo", titulo) :
                new ObjectParameter("titulo", typeof(string));
    
            var descricaoParameter = descricao != null ?
                new ObjectParameter("descricao", descricao) :
                new ObjectParameter("descricao", typeof(string));
    
            var statementTypeParameter = statementType != null ?
                new ObjectParameter("StatementType", statementType) :
                new ObjectParameter("StatementType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SpCrudProblema", idParameter, tituloParameter, descricaoParameter, statementTypeParameter);
        }
    
        public virtual int SpCrudProfessor(Nullable<int> id, string nome, string cpf, string senha, string statementType)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var nomeParameter = nome != null ?
                new ObjectParameter("nome", nome) :
                new ObjectParameter("nome", typeof(string));
    
            var cpfParameter = cpf != null ?
                new ObjectParameter("cpf", cpf) :
                new ObjectParameter("cpf", typeof(string));
    
            var senhaParameter = senha != null ?
                new ObjectParameter("senha", senha) :
                new ObjectParameter("senha", typeof(string));
    
            var statementTypeParameter = statementType != null ?
                new ObjectParameter("StatementType", statementType) :
                new ObjectParameter("StatementType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SpCrudProfessor", idParameter, nomeParameter, cpfParameter, senhaParameter, statementTypeParameter);
        }
    
        public virtual int SpCrudProva(Nullable<int> id, Nullable<int> idTipoProva, Nullable<decimal> valorQuestao, string statementType)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var idTipoProvaParameter = idTipoProva.HasValue ?
                new ObjectParameter("idTipoProva", idTipoProva) :
                new ObjectParameter("idTipoProva", typeof(int));
    
            var valorQuestaoParameter = valorQuestao.HasValue ?
                new ObjectParameter("valorQuestao", valorQuestao) :
                new ObjectParameter("valorQuestao", typeof(decimal));
    
            var statementTypeParameter = statementType != null ?
                new ObjectParameter("StatementType", statementType) :
                new ObjectParameter("StatementType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SpCrudProva", idParameter, idTipoProvaParameter, valorQuestaoParameter, statementTypeParameter);
        }
    
        public virtual int SpCrudSemestre(Nullable<int> id, string descricao, Nullable<System.DateTime> dtIni1, Nullable<System.DateTime> dtIni2, Nullable<System.DateTime> dtIni3, Nullable<System.DateTime> dtFim1, Nullable<System.DateTime> dtFim2, Nullable<System.DateTime> dtFim3, string statementType)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var descricaoParameter = descricao != null ?
                new ObjectParameter("descricao", descricao) :
                new ObjectParameter("descricao", typeof(string));
    
            var dtIni1Parameter = dtIni1.HasValue ?
                new ObjectParameter("dtIni1", dtIni1) :
                new ObjectParameter("dtIni1", typeof(System.DateTime));
    
            var dtIni2Parameter = dtIni2.HasValue ?
                new ObjectParameter("dtIni2", dtIni2) :
                new ObjectParameter("dtIni2", typeof(System.DateTime));
    
            var dtIni3Parameter = dtIni3.HasValue ?
                new ObjectParameter("dtIni3", dtIni3) :
                new ObjectParameter("dtIni3", typeof(System.DateTime));
    
            var dtFim1Parameter = dtFim1.HasValue ?
                new ObjectParameter("dtFim1", dtFim1) :
                new ObjectParameter("dtFim1", typeof(System.DateTime));
    
            var dtFim2Parameter = dtFim2.HasValue ?
                new ObjectParameter("dtFim2", dtFim2) :
                new ObjectParameter("dtFim2", typeof(System.DateTime));
    
            var dtFim3Parameter = dtFim3.HasValue ?
                new ObjectParameter("dtFim3", dtFim3) :
                new ObjectParameter("dtFim3", typeof(System.DateTime));
    
            var statementTypeParameter = statementType != null ?
                new ObjectParameter("StatementType", statementType) :
                new ObjectParameter("StatementType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SpCrudSemestre", idParameter, descricaoParameter, dtIni1Parameter, dtIni2Parameter, dtIni3Parameter, dtFim1Parameter, dtFim2Parameter, dtFim3Parameter, statementTypeParameter);
        }
    
        public virtual int SpCrudTipoDisciplina(Nullable<int> id, string descricao, string statementType)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var descricaoParameter = descricao != null ?
                new ObjectParameter("descricao", descricao) :
                new ObjectParameter("descricao", typeof(string));
    
            var statementTypeParameter = statementType != null ?
                new ObjectParameter("StatementType", statementType) :
                new ObjectParameter("StatementType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SpCrudTipoDisciplina", idParameter, descricaoParameter, statementTypeParameter);
        }
    
        public virtual int SpCrudTipoProva(Nullable<int> id, string descricao, string statementType)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var descricaoParameter = descricao != null ?
                new ObjectParameter("descricao", descricao) :
                new ObjectParameter("descricao", typeof(string));
    
            var statementTypeParameter = statementType != null ?
                new ObjectParameter("StatementType", statementType) :
                new ObjectParameter("StatementType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SpCrudTipoProva", idParameter, descricaoParameter, statementTypeParameter);
        }
    
        public virtual int SpCrudTurma(Nullable<int> id, string descricao, Nullable<int> idDisciplina, Nullable<int> idMed, Nullable<int> idProfessor, string statementType)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var descricaoParameter = descricao != null ?
                new ObjectParameter("descricao", descricao) :
                new ObjectParameter("descricao", typeof(string));
    
            var idDisciplinaParameter = idDisciplina.HasValue ?
                new ObjectParameter("idDisciplina", idDisciplina) :
                new ObjectParameter("idDisciplina", typeof(int));
    
            var idMedParameter = idMed.HasValue ?
                new ObjectParameter("idMed", idMed) :
                new ObjectParameter("idMed", typeof(int));
    
            var idProfessorParameter = idProfessor.HasValue ?
                new ObjectParameter("idProfessor", idProfessor) :
                new ObjectParameter("idProfessor", typeof(int));
    
            var statementTypeParameter = statementType != null ?
                new ObjectParameter("StatementType", statementType) :
                new ObjectParameter("StatementType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SpCrudTurma", idParameter, descricaoParameter, idDisciplinaParameter, idMedParameter, idProfessorParameter, statementTypeParameter);
        }
    
        public virtual int SpGerenciaAlunoTurma(Nullable<int> idInscricaoMed, Nullable<int> idTurma, Nullable<int> idModulo, Nullable<decimal> nota, string statementType)
        {
            var idInscricaoMedParameter = idInscricaoMed.HasValue ?
                new ObjectParameter("idInscricaoMed", idInscricaoMed) :
                new ObjectParameter("idInscricaoMed", typeof(int));
    
            var idTurmaParameter = idTurma.HasValue ?
                new ObjectParameter("idTurma", idTurma) :
                new ObjectParameter("idTurma", typeof(int));
    
            var idModuloParameter = idModulo.HasValue ?
                new ObjectParameter("idModulo", idModulo) :
                new ObjectParameter("idModulo", typeof(int));
    
            var notaParameter = nota.HasValue ?
                new ObjectParameter("nota", nota) :
                new ObjectParameter("nota", typeof(decimal));
    
            var statementTypeParameter = statementType != null ?
                new ObjectParameter("StatementType", statementType) :
                new ObjectParameter("StatementType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SpGerenciaAlunoTurma", idInscricaoMedParameter, idTurmaParameter, idModuloParameter, notaParameter, statementTypeParameter);
        }
    
        public virtual int SpCrudAluno1(Nullable<int> id, string nome, string cpf, string senha, string matricula, string statementType)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var nomeParameter = nome != null ?
                new ObjectParameter("nome", nome) :
                new ObjectParameter("nome", typeof(string));
    
            var cpfParameter = cpf != null ?
                new ObjectParameter("cpf", cpf) :
                new ObjectParameter("cpf", typeof(string));
    
            var senhaParameter = senha != null ?
                new ObjectParameter("senha", senha) :
                new ObjectParameter("senha", typeof(string));
    
            var matriculaParameter = matricula != null ?
                new ObjectParameter("matricula", matricula) :
                new ObjectParameter("matricula", typeof(string));
    
            var statementTypeParameter = statementType != null ?
                new ObjectParameter("StatementType", statementType) :
                new ObjectParameter("StatementType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SpCrudAluno1", idParameter, nomeParameter, cpfParameter, senhaParameter, matriculaParameter, statementTypeParameter);
        }
    
        public virtual int SpCrudAno1(Nullable<int> id, string ano, string statementType)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var anoParameter = ano != null ?
                new ObjectParameter("ano", ano) :
                new ObjectParameter("ano", typeof(string));
    
            var statementTypeParameter = statementType != null ?
                new ObjectParameter("StatementType", statementType) :
                new ObjectParameter("StatementType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SpCrudAno1", idParameter, anoParameter, statementTypeParameter);
        }
    
        public virtual int SpCrudDisciplina1(Nullable<int> id, Nullable<int> idTipoDisciplina, string descricao, string statementType)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var idTipoDisciplinaParameter = idTipoDisciplina.HasValue ?
                new ObjectParameter("idTipoDisciplina", idTipoDisciplina) :
                new ObjectParameter("idTipoDisciplina", typeof(int));
    
            var descricaoParameter = descricao != null ?
                new ObjectParameter("descricao", descricao) :
                new ObjectParameter("descricao", typeof(string));
    
            var statementTypeParameter = statementType != null ?
                new ObjectParameter("StatementType", statementType) :
                new ObjectParameter("StatementType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SpCrudDisciplina1", idParameter, idTipoDisciplinaParameter, descricaoParameter, statementTypeParameter);
        }
    
        public virtual int SpCrudGrupo1(Nullable<int> id, Nullable<int> idProfessor, string descricao, Nullable<int> idMed, string statementType)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var idProfessorParameter = idProfessor.HasValue ?
                new ObjectParameter("idProfessor", idProfessor) :
                new ObjectParameter("idProfessor", typeof(int));
    
            var descricaoParameter = descricao != null ?
                new ObjectParameter("descricao", descricao) :
                new ObjectParameter("descricao", typeof(string));
    
            var idMedParameter = idMed.HasValue ?
                new ObjectParameter("idMed", idMed) :
                new ObjectParameter("idMed", typeof(int));
    
            var statementTypeParameter = statementType != null ?
                new ObjectParameter("StatementType", statementType) :
                new ObjectParameter("StatementType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SpCrudGrupo1", idParameter, idProfessorParameter, descricaoParameter, idMedParameter, statementTypeParameter);
        }
    
        public virtual int SpCrudMed1(Nullable<int> id, string descricao, Nullable<int> idSemestre, string statementType)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var descricaoParameter = descricao != null ?
                new ObjectParameter("descricao", descricao) :
                new ObjectParameter("descricao", typeof(string));
    
            var idSemestreParameter = idSemestre.HasValue ?
                new ObjectParameter("idSemestre", idSemestre) :
                new ObjectParameter("idSemestre", typeof(int));
    
            var statementTypeParameter = statementType != null ?
                new ObjectParameter("StatementType", statementType) :
                new ObjectParameter("StatementType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SpCrudMed1", idParameter, descricaoParameter, idSemestreParameter, statementTypeParameter);
        }
    
        public virtual int SpCrudModulo1(Nullable<int> id, string descricao, Nullable<System.DateTime> dtInicio, Nullable<System.DateTime> dtFim, Nullable<int> idSemestre, string statementType)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var descricaoParameter = descricao != null ?
                new ObjectParameter("descricao", descricao) :
                new ObjectParameter("descricao", typeof(string));
    
            var dtInicioParameter = dtInicio.HasValue ?
                new ObjectParameter("dtInicio", dtInicio) :
                new ObjectParameter("dtInicio", typeof(System.DateTime));
    
            var dtFimParameter = dtFim.HasValue ?
                new ObjectParameter("dtFim", dtFim) :
                new ObjectParameter("dtFim", typeof(System.DateTime));
    
            var idSemestreParameter = idSemestre.HasValue ?
                new ObjectParameter("idSemestre", idSemestre) :
                new ObjectParameter("idSemestre", typeof(int));
    
            var statementTypeParameter = statementType != null ?
                new ObjectParameter("StatementType", statementType) :
                new ObjectParameter("StatementType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SpCrudModulo1", idParameter, descricaoParameter, dtInicioParameter, dtFimParameter, idSemestreParameter, statementTypeParameter);
        }
    
        public virtual int SpCrudProblema1(Nullable<int> id, string titulo, string descricao, string statementType)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var tituloParameter = titulo != null ?
                new ObjectParameter("titulo", titulo) :
                new ObjectParameter("titulo", typeof(string));
    
            var descricaoParameter = descricao != null ?
                new ObjectParameter("descricao", descricao) :
                new ObjectParameter("descricao", typeof(string));
    
            var statementTypeParameter = statementType != null ?
                new ObjectParameter("StatementType", statementType) :
                new ObjectParameter("StatementType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SpCrudProblema1", idParameter, tituloParameter, descricaoParameter, statementTypeParameter);
        }
    
        public virtual int SpCrudProfessor1(Nullable<int> id, string nome, string cpf, string senha, string statementType)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var nomeParameter = nome != null ?
                new ObjectParameter("nome", nome) :
                new ObjectParameter("nome", typeof(string));
    
            var cpfParameter = cpf != null ?
                new ObjectParameter("cpf", cpf) :
                new ObjectParameter("cpf", typeof(string));
    
            var senhaParameter = senha != null ?
                new ObjectParameter("senha", senha) :
                new ObjectParameter("senha", typeof(string));
    
            var statementTypeParameter = statementType != null ?
                new ObjectParameter("StatementType", statementType) :
                new ObjectParameter("StatementType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SpCrudProfessor1", idParameter, nomeParameter, cpfParameter, senhaParameter, statementTypeParameter);
        }
    
        public virtual int SpCrudProva1(Nullable<int> id, Nullable<int> idTipoProva, Nullable<decimal> valorQuestao, string statementType)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var idTipoProvaParameter = idTipoProva.HasValue ?
                new ObjectParameter("idTipoProva", idTipoProva) :
                new ObjectParameter("idTipoProva", typeof(int));
    
            var valorQuestaoParameter = valorQuestao.HasValue ?
                new ObjectParameter("valorQuestao", valorQuestao) :
                new ObjectParameter("valorQuestao", typeof(decimal));
    
            var statementTypeParameter = statementType != null ?
                new ObjectParameter("StatementType", statementType) :
                new ObjectParameter("StatementType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SpCrudProva1", idParameter, idTipoProvaParameter, valorQuestaoParameter, statementTypeParameter);
        }
    
        public virtual int SpCrudSemestre1(Nullable<int> id, Nullable<System.DateTime> dtIni1, Nullable<System.DateTime> dtIni2, Nullable<System.DateTime> dtIni3, Nullable<System.DateTime> dtFim1, Nullable<System.DateTime> dtFim2, Nullable<System.DateTime> dtFim3, string statementType)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var dtIni1Parameter = dtIni1.HasValue ?
                new ObjectParameter("dtIni1", dtIni1) :
                new ObjectParameter("dtIni1", typeof(System.DateTime));
    
            var dtIni2Parameter = dtIni2.HasValue ?
                new ObjectParameter("dtIni2", dtIni2) :
                new ObjectParameter("dtIni2", typeof(System.DateTime));
    
            var dtIni3Parameter = dtIni3.HasValue ?
                new ObjectParameter("dtIni3", dtIni3) :
                new ObjectParameter("dtIni3", typeof(System.DateTime));
    
            var dtFim1Parameter = dtFim1.HasValue ?
                new ObjectParameter("dtFim1", dtFim1) :
                new ObjectParameter("dtFim1", typeof(System.DateTime));
    
            var dtFim2Parameter = dtFim2.HasValue ?
                new ObjectParameter("dtFim2", dtFim2) :
                new ObjectParameter("dtFim2", typeof(System.DateTime));
    
            var dtFim3Parameter = dtFim3.HasValue ?
                new ObjectParameter("dtFim3", dtFim3) :
                new ObjectParameter("dtFim3", typeof(System.DateTime));
    
            var statementTypeParameter = statementType != null ?
                new ObjectParameter("StatementType", statementType) :
                new ObjectParameter("StatementType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SpCrudSemestre1", idParameter, dtIni1Parameter, dtIni2Parameter, dtIni3Parameter, dtFim1Parameter, dtFim2Parameter, dtFim3Parameter, statementTypeParameter);
        }
    
        public virtual int SpCrudTipoDisciplina1(Nullable<int> id, string descricao, string statementType)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var descricaoParameter = descricao != null ?
                new ObjectParameter("descricao", descricao) :
                new ObjectParameter("descricao", typeof(string));
    
            var statementTypeParameter = statementType != null ?
                new ObjectParameter("StatementType", statementType) :
                new ObjectParameter("StatementType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SpCrudTipoDisciplina1", idParameter, descricaoParameter, statementTypeParameter);
        }
    
        public virtual int SpCrudTipoProva1(Nullable<int> id, string descricao, string statementType)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var descricaoParameter = descricao != null ?
                new ObjectParameter("descricao", descricao) :
                new ObjectParameter("descricao", typeof(string));
    
            var statementTypeParameter = statementType != null ?
                new ObjectParameter("StatementType", statementType) :
                new ObjectParameter("StatementType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SpCrudTipoProva1", idParameter, descricaoParameter, statementTypeParameter);
        }
    
        public virtual int SpVerificaSemestreAtivo()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SpVerificaSemestreAtivo");
        }
    }
}
