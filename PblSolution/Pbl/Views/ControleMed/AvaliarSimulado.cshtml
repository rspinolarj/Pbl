@model IEnumerable<Pbl.Models.ControleNotasXProva>

@{
    ViewBag.Title = "AvaliarSimulado";
}

<h3>
    Simulado
    <small>Quantidade de Acertos do Aluno</small>
</h3>

@using (Html.BeginForm("InserirNotasSimulado","ControleMed"))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <hr />
        <input type="hidden" name="idProva" value="@Model.FirstOrDefault().idProva" />
        
            <div class="row">
                <div class="col-lg-12">
                    <div class="panel panel-default">
                        <div class="panel-heading">Acertos no Simulado</div>
                        <div class="panel-body">
                            <div class="table-responsive">
                                <table class="table table-hover">
                                    <thead>
                                        <tr>
                                            <th>Nome</th>
                                            <th>Nota</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                    @foreach (var item in Model)
                                    {

                                        <tr>
                                            <td>@item.ControleNotas.InscricaoTurma.Aluno.nomeAluno</td>
                                            <td>
                                                <input type="hidden" name="idControleNotas[]" value="@item.idControleNotas" />
                                                <div class="input-group numAcertos">
                                                    <span class="input-group-btn">
                                                        <button type="button" class="btn btn-default btn-number" data-type="minus" data-field="numAcertos[@item.ControleNotas.idControleNotas]">
                                                            <span class="glyphicon glyphicon-minus"></span>
                                                        </button>
                                                    </span>
                                                    <input type="text" name="numeroAcertos[]" id="numAcertos[@item.ControleNotas.idControleNotas]" class="form-control input-number" value="@item.numAcertos" min="0" max="@item.Prova.numeroQuestoes">
                                                    <span class="input-group-btn">
                                                        <button type="button" class="btn btn-default btn-number" data-type="plus" data-field="numAcertos[@item.ControleNotas.idControleNotas]">
                                                            <span class="glyphicon glyphicon-plus"></span>
                                                        </button>
                                                    </span>
                                                </div>
                                            </td>
                                        </tr>
                                    }
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>

                
            </div>
        <hr class="hidden-print" />
        <div class="clearfix">
            <button type="button" class="btn btn-labeled btn-default" onclick="history.back();">
                <span class="btn-label">
                    <i class="fa fa-arrow-left"></i>
                </span>Voltar
            </button>
            <button type="submit" id="btnSubmit" class="btn btn-labeled btn-success pull-right">
                <span class="btn-label">
                    <i class="fa fa-check"></i>
                </span>Cadastrar
            </button>
        </div>
    </div>
}

@section styles{
    <style>
        .numAcertos{
            max-width: 138px;
            min-width:137px;
        }
    </style>
}

@section scripts{
    <script>
        //plugin bootstrap minus and plus
        //http://jsfiddle.net/laelitenetwork/puJ6G/
        $('.btn-number').click(function (e) {
            e.preventDefault();

            fieldName = $(this).attr('data-field');
            type = $(this).attr('data-type');
            var input = $("input[id='" + fieldName + "']");
            var currentVal = parseInt(input.val());
            if (!isNaN(currentVal)) {
                if (type == 'minus') {

                    if (currentVal > input.attr('min')) {
                        input.val(currentVal - 1).change();
                    }
                    if (parseInt(input.val()) == input.attr('min')) {
                        $(this).attr('disabled', true);
                    }

                } else if (type == 'plus') {

                    if (currentVal < input.attr('max')) {
                        input.val(currentVal + 1).change();
                    }
                    if (parseInt(input.val()) == input.attr('max')) {
                        $(this).attr('disabled', true);
                    }

                }
            } else {
                input.val(0);
            }
        });
        $('.input-number').focusin(function () {
            $(this).data('oldValue', $(this).val());
        });
        $('.input-number').change(function () {

            minValue = parseInt($(this).attr('min'));
            maxValue = parseInt($(this).attr('max'));
            valueCurrent = parseInt($(this).val());

            name = $(this).attr('id');
            if (valueCurrent >= minValue) {
                $(".btn-number[data-type='minus'][data-field='" + name + "']").removeAttr('disabled')
            } else {
                alert('Sorry, the minimum value was reached');
                $(this).val($(this).data('oldValue'));
            }
            if (valueCurrent <= maxValue) {
                $(".btn-number[data-type='plus'][data-field='" + name + "']").removeAttr('disabled')
            } else {
                alert('Sorry, the maximum value was reached');
                $(this).val($(this).data('oldValue'));
            }


        });
        $(".input-number").keydown(function (e) {
            // Allow: backspace, delete, tab, escape, enter and .
            if ($.inArray(e.keyCode, [46, 8, 9, 27, 13, 190]) !== -1 ||
                // Allow: Ctrl+A
                (e.keyCode == 65 && e.ctrlKey === true) ||
                // Allow: home, end, left, right
                (e.keyCode >= 35 && e.keyCode <= 39)) {
                // let it happen, don't do anything
                return;
            }
            // Ensure that it is a number and stop the keypress
            if ((e.shiftKey || (e.keyCode < 48 || e.keyCode > 57)) && (e.keyCode < 96 || e.keyCode > 105)) {
                e.preventDefault();
            }
        });
    </script>    
}